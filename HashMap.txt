


本文分析HashMap的实现原理。

###一、数据结构（散列表）
HashMap是一个散列表（也叫哈希表），用来存储键值对(key-value)映射。散列表是一种数组和链表的结合体，结构图如下：

==========>图

简单来说就是一个数组（上图纵向），数组的每个元素是一个链表（上图横向），类似二维数组。链表的每个节点就是我们存储的key-value数据（代码中将key和value封装成Entry对象作为链表的节点）。

#####哈希算法
对于散列表，不管是存值还是取值，都需要通过Key来定位散列表中的一个具体的位置（即某个链表的某个节点），计算这个位置的方法就是哈希算法。源码是这样实现的：用Key的hash值对数组长度做取余操作得到一个整数，这个整数作为数组中的索引得到这个索引位置的链表。得到链表之后，就可以存值和取值了。存值简单，直接把数据插入到链表的头部或者尾部即可。如果是取值，就遍历链表，通过key的equals方法找到具体的节点。




















